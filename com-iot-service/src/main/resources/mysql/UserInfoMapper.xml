<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.iot.dao.UserInfoDao">
	<resultMap id="UserInfoMap" type="UserInfo">
	    <id property="id" column="id" />
	    <result property="loginName" column="loginName"/>
	    <result property="password" column="password"/>
	    <result property="salt" column="salt"/>
        <result property="avatar" column="avatar"/>
        <result property="email" column="email"/>
        <result property="status" column="status"/>
		<result property="createdTime" column="createdTime"/>
		<result property="lastUpdatedTime" column="lastUpdatedTime"/>
	</resultMap>
	<sql id="sqlColumns">
		id,loginName,password,salt,avatar,email,status,createdTime,lastUpdatedTime
	</sql>
	<insert id="add" parameterType="UserInfo">
		insert into userInfo (<include refid="sqlColumns" />)
		values ( #{id}, #{loginName}, #{password},#{salt},#{avatar},#{email},#{status},#{createdTime},#{lastUpdatedTime})
	</insert>

    <select id="getById" parameterType="long" resultMap="UserInfoMap">
        select
        <include refid="sqlColumns" />
        from userInfo
        where id=#{id}
        limit 1
    </select>

    <select id="getByLoginName" parameterType="String" resultMap="UserInfoMap">
        select
        <include refid="sqlColumns" />
        from userInfo
        where loginName=#{loginName}
        limit 1
    </select>

	<select id="getByLoginNameAndPassword" parameterType="map" resultMap="UserInfoMap">
		select
		<include refid="sqlColumns" />
		from userInfo
		where loginName=#{loginName}
		and password=#{password}
		limit 1
	</select>

	<update id="update" parameterType="UserInfo">
		update userInfo
		<set>
			<if test="avatar != null">Avater = #{avatar},</if>
			<if test="email != null">Email = #{email},</if>
			<if test="status != null">Status = #{status},</if>
			<if test="deviceId != null">DeviceId= #{deviceId},</if>
	        <if test="lastUpdatedTime != null">LastUpdatedTime = now(),</if>
		</set>
		where id=#{id}
	</update>

	<update id="deleteById" parameterType="long">
		delete from userInfo where id=#{id}
	</update>
</mapper>